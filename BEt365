from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# 你的Telegram机器人API密钥
API_KEY = '7289484401:AAEap4K7VMwEWdg0X3a3zdCpKq-iwsMvdpw'

# 欢迎新成员的函数
async def welcome(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """当有新成员加入群组时，发送欢迎消息."""
    for member in update.message.new_chat_members:
        await update.message.reply_text(f"欢迎 {member.first_name} 加入我们的群组！希望你在这里度过愉快的时光！")

# 处理/ban命令的函数
async def ban(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    处理/ban命令。需要回复要被禁用的用户的消息，然后执行ban操作。
    """
    if update.message.reply_to_message:
        user_id = update.message.reply_to_message.from_user.id
        chat_id = update.message.chat_id
        try:
            await context.bot.ban_chat_member(chat_id=chat_id, user_id=user_id)
            await update.message.reply_text(f"用户 {update.message.reply_to_message.from_user.first_name} 已被禁用。")
        except Exception as e:
            await update.message.reply_text(f"发生错误: {str(e)}")
    else:
        await update.message.reply_text("请先回复您想要禁用的用户的消息，然后使用 /ban 命令。")

# 处理/start命令的函数
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """处理/start命令，返回机器人的欢迎信息."""
    user = update.effective_user
    await update.message.reply_html(
        f"Hi {user.mention_html()}! 我是一个简单的机器人。可以用 /ban 来禁用群组成员哦。"
    )

# 主函数
def main() -> None:
    """启动机器人并运行."""
    # 创建Application对象并设置token
    application = Application.builder().token(API_KEY).build()

    # 添加命令处理器
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("ban", ban))

    # 添加消息处理器来欢迎新成员
    application.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, welcome))

    # 启动轮询
    application.run_polling()

if __name__ == '__main__':
    main()
